package aws.tf.password
# backwards compatibility for older versions of rego, required for the in keyword
import future.keywords.in

# deny policy where you must use the random password resource to generate passwords
# TODO: I'd have to check every instance of a resource that would require a password 
# and enforce the use of the random_password resource,
# so for now, I'm setting as a warn policy and will circle back at a later date... 
# maybe for someone else lol

# Function to check if an attribute is a password field
is_password_key(attr) {
	password_keys := {
		"password", 
		"master_password", 
		"admin_password", 
		"user_password", 
		"root_password"
		}
	password_keys[attr]
}

# Function to check if a value is generated by 'random_password'
is_generated_by_random_password(value) {
	startswith(value, "random_password.")
}

# deny policy where you must use the random password resource to generate passwords
deny[msg] {
	some resource in input.resource_changes
	some attr, value in resource.change.after

	# Check if the attribute is a known password field
	is_password_key(attr)

	# Ensure the password is NOT referencing a random_password resource
	not is_generated_by_random_password(value)

	msg := sprintf("Resource %s uses a hardcoded password. Use resource 'random_password' instead. https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/password", [resource.address])
}

# deny policy where password must be at least 12 characters
deny[msg] {
	some resource in input.resource_changes
	resource.type == "random_password"
	"create" in resource.change.actions
	resource.change.after.length < 12

	msg := "password must be at least 12 characters"
}

# warn policy where password is under 16 but at least 12 characters
warn[msg] {
	some resource in input.resource_changes
	resource.type == "random_password"
	"create" in resource.change.actions
	resource.change.after.length < 16
	resource.change.after.length >= 12

	msg := "password is under 16 characters, we recommend setting it to over 16 characters"
}
